1.ARM的课程
(1).熟悉arm 一款芯片
(2).学习ARM汇编 (汇编语言，混合编程(C语言))
(3).操作硬件(----驱动程序)

驱动程序: ----- 驱动，本身是一个软件 ，--(驱使硬件动起来的程序)

裸机驱动----- 不带操作系统的，直接操作到硬件。
驱动    ----- 带操作系统的, 通过操作系统配合实现硬件的操作。

------------------------------------------------
1.计算机能够识别的 0 1 
  问题：
   0,1到底是什么？
－－－－－－－－－－－
我们通常所说的０,１代表的是"逻辑上的0,1"(数字电路)
对应到具体的电路的实现时，有不同的电平标准（模拟电路）

1---高电平(电压高)
0---低电平(电压低)

不同的电平标准表示0，1是不同的！
TTL来说，
        高电平指2.4v~5.0v  -----> 1
		低电平指0.0v~0.4v。-----> 0
CMOS:
        高电平指4.99v~5.0v，-----> 1
	    低电平指0.0v~0.01v。-----> 0
RS232   高: -3V  --  -12V  -----> 1
        低: 3v   --  12V   -----> 0

如果不同电平之间要进行数据传输，则需要借助转换芯片，进行转换！

2.常见电子元器件
  (1).二极管
      应用:
	     led发光二极管
	
    	 ----|> ---
     构成：
	     PN结 
	    P -- 正极
	    N -- 负极
	 
	 特点：
	     单向导电性
	 导通：
	    P--->N 导通
        N--->P 不导通
		
  (2).三极管  
      两种类型：
	  PNP 和 NPN型  导通： p--->n导通
      区分两种类型:
		  电路图
		  箭头
		  箭头方向指向的 是 N 
  (3).mos 管
       金属(metal)―氧化物(oxide)―半导体(semiconductor)场效应晶体管
      MOS管有三极, D(drain)漏极 S(source)源极  G(Gate),栅极
	  导通：
	    S 和 D 之间的导通
		g 起到开关作用
	  
	  分类：
	    N沟道的mos管
		P沟道的mos管
		
		区分:
		[1].
			D极: 
			S极:---有两根线交叉的
			G极
		[2].N沟道 P沟道
		   看箭头的方向 
		   箭头指向沟道的 ---N沟道
		   箭头背离沟道方向的 ---P沟道
		使用：
			NMOS 使用: 
				 D 输入(电源)
				 S 输出
				 G 开关(高电平 ---导通)
				 
			PMOS 使用:
				 D 输出 
				 S 输入(电源)
				 G 开关(低电平 ---导通)
  (4).电阻
      特点：
	      分压限流
      注意:
	      电路符号
		   带角的波浪号
		   ---^^^^^--
  (5).电容
      特点：
	      隔直通交
	  注意:
	      旁路电容 和 储能电容
  (6).电感
         特点:
		  隔交通直
	  注意:
	     符号
		 半圆形的 波浪符号
		 
3.数字电路
  (1).各种门电路
     
	与：    (符号：类似子弹头)
	  特点：
	    一假则假(0)
	或：    (符号: 类似一个 箭头)
	  特点:
	    一真则真(1)
	非：    (符号: 三角符号 + 小圆圈)
	  特点:
	    真假相对
	逻辑运算。
4.计算机组成
  输入设备
  输出设备
  存储器 |
  控制器 |---cpu
  运算器 |
--------------------
  输入设备:鼠标，键盘
  输出设备:显示器
  存储器
  控制器
  运算器
		   
		   
存储器:

快    --------------------------------------------> 慢
容量小
价格高
		Reg  Cache  主存(内存)  外存(辅存)

Add r0,r1  ---> r0 和 r1 是CPU内部的！

问题:
   r0 r1 有没有地址？
-------------------------------------
   register int a = 10; //CPU 的内部
   printf("&a = %p\n",&a);//不行
   
   int b = 20； //b --->栈--->内存
   printf("&b = %p\n",&b);//不行
    int *p = &b;
	*p = 30; // 30 
	         // 写操作
			 // 往哪里写？ 
			 // p中地址指向的存储单元
------------------------------------
   
[控制器]

时序:
11届三中全会       改革开放        
   |                  |                    
--1978--------------1980----------1990--------2000--------2010-------->

      +----+    +----+
      |    |    |    |
------+    +----+    +----+ 

1010 值 

   +----+                  +----+
   |    |                  |    |
   |    |----+------+------+    +
     
	1      0    0     0       1
 


[心脏] ----心电图
晶振--节拍
 
[运算器]
		   
总线:
    计算机内部的高速公路！
	
现在计算机基本上有：
数据，地址，控制总线！

总线划分:
  单总线:操作IO设备方式与内存类似
  多总线:操作IO设备需要专门的指令
  
---------------------------------------
识别电路原理图:
电路原理图:
U21(元件名) ---->元件类型名----->相关芯片资料 --->电路中如何用，引脚的介绍！
-----------------------------------------------------------------------------


ARM公司:
设计芯片，并不生产芯片！

可以授权给 半导体公司(芯片厂商)
三星 MTK 高通 TI 生产芯片

芯片厂商:
根据需要，设计外围器件，设计好芯片，对应的解决方案!

芯片设计(ARM核)               芯片厂商         
---------------              --------------------------------
ARM(CortexA9)                 Exnosy4412 (SOC system on chip)
--------------------------------------------------------------

arm的两种工作状态:
[1].执行ARM指令的状态 --- ARM状态
[2].执行thumb指令的状态 --- thumb状态
--------------------------------------
ARM的工作模式:
（1）.正常模式
  [1]. user 用户模式
  [2]. system 模式
  [3]. 特权模式(注意)
（2）.两种中断
  [4].FIQ(fast interrupt request) 
  [5].IRQ
 (3).两种异常
  [6].data abort (数据访问终止异常)
  [7].undefined abort (未定义指令终止异常)
（4）.cortex -A monitor
  [8].monitor 模式
---------------------------------------------


异常类型                   对应模式
[1].复位异常               SVC(特权模式)---操作系统 
[2].中断异常
     FIQ中断               FIQ模式
	 IRQ中断               IRQ模式
[3].终止异常
    取指异常               data abort
	未定义异常             undefined abort
	数据访问               data abort
[4].软中断异常             svc模式

-------------------------------------------------------
user和system是正常模式，其他模式都是异常模式.
切换到异常模式之后，通常都是要切换回来的！

异常发生时，对应的处理：
"保存现场,切换模式"
[1].arm 核的处理(硬件)
  保存现场：
	   [1]. 保存原模式的CPSR的值到"异常模式"下的SPSR中
	        spsr_except_mode = cpsr; 
	   [2]. 保存返回地址，原模式下的下一条指令地址保存的
	       LR_except_mode 中
		   LR_except_mode = pc -4 (这个操作是arm核自己完成的！)(流水线)
  切换模式:
	   [3].将CPSR模式位强制设置为“异常模式”对应的值，
	       同时处理器进入到ARM执行模式，
		   禁止所有IRQ中断，
		   当进入FIQ快速中断模式时，禁止FIQ中断！
	   [4].跳转异常向量表：
			强制设置PC的值为相应异常向量地址，
			跳转到异常处理程序中！
 
[2].软件处理(程序员)
      [1].修正返回地址
	  [2].实现异常向量表
	  [3].对应的异常处理程序
	  [4].返回 
	      pc = lr
-----------------------------------
LR地址的修正:
[1].复位异常      不需要
[2].FIQ 
    IRQ           LR - 4
[3].数据访问      LR - 8 
[4].预取指        LR - 4 
[5].未定义        
    SWI           LR

