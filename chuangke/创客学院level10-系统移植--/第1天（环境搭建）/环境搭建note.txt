一 pc机和嵌入式设备

1.pc机 
 [1]BIOS     (硬件初始化:内存(SDRAM/DDR2/DDR3/DDR4)，启动方式:USB 硬盘 光驱 ...)
 [2]引导程序 (grub,lilo,...) =>加载操作系统
 [3]OS       (windows,Linux,Mac os)
 [4]挂载文件系统(NTFS,FAT(16/32),EXT(2,3,4)) 	
 [5]应用程序

2.嵌入式设备(exynos4412)
 [1]iROM固化代码(基本硬件初始化,判别启动方式(SD/USB/EMMC),读取存储介质一部分数据到iRAM)
 [2]iRAM代码运行bootloader第一阶段(初始化系统时钟,初始化内存，搬移bootloader到内存)
 [3]内存中运行bootloader第二阶段(初始化基本的硬件设备(串口,EMMC,SD),加载OS到内存)
 [4]内存中运行操作系统(Linux,windows CE,Mac OS)
 [5]挂载文件系统 
 [6]运行应用程序 
 
 bootloader = BIOS + 引导程序

二 Linux 解压命令

tar -xvf   	xxx.tar.* 
xxx.tar.gz   -> tar -zxvf  xxx.tar.gz 
xxx.tar.bz2  -> tar -jxvf  xxx.tar.bz2 
xxx.tar.xz   -> tar -Jxvf  xxx.tar.xz 

三 添加交叉开发工具链

交叉开发:在PC机完成代码的编写与编译,在开发板运行编译好的程序 

export PATH=$PATH:交叉开发工具链绝对路径 

例如:
在/home/linux/.bashrc或/etc/bash.bashrc文件中添加如下内容:

TOOL_CHAIN=/home/linux/workdir/15071/fs4412/gcc-4.6.4/bin 
export PATH=$PATH:$TOOL_CHAIN

四 sd卡烧写u_boot 

(1)mkuboot.sh  -> 在烧写一个uboot到sd卡
(2)通过拨碼开关从sd卡启动
(2)在sd卡中新建一个sdupdate目录
(4)将自己编译好的u-boot-fs4412.bin拷贝到了sdupdate目录
(5)从sd卡启动，在启动的uboot中，
输入命令:sdfuse flash bootloader u-boot-fs4412.bin(将bootloader写到emmc)
(6)拨动拨碼开关从emmc启动 

五 用u_boot引导Linux内核 

1.配置tftp服务(文件传输)
(1)安装软件包
(2)修改默认的配置文件 /etc/default/tftpd-hpa 
(3)重新启动tftp服务   sudo /etc/init.d/tftpd-hpa restart


2.配置nfs服务(设置目录为网络上的共享目录)
(1)安装软件包
(2)修改默认的配置文件 /etc/exports
(3)重新启动nfs服务   sudo /etc/init.d/nfs-kernel-server restart

六 u_boot常用命令  

(1)设置开发板ip地址
  setenv ipaddr  ip地址 
  setenv ipaddr 192.168.1.133
	
(2)设置tftp服务器端的ip地址
 setenv serverip  服务器端的地址 
 setenv serverip 192.168.1.121
 
(3)保存设置好的环境变量
 save
 
 在开发板端去做ping测试，ping 192.168.1.121(secure CRT)
 若提示...is alive 则表示开发板与ubuntu连接成功。
 

(4)引导Linux内核的命令
 tftp 41000000 uImage
 tftp 42000000 exynos4412-fs4412.dtb
 tftp 43000000 ramdisk.img
 
 bootm 内核在内存地址  ramdisk在内存地址  设备树在内存地址
 bootm 41000000  43000000   42000000   

注意:
如果没有ramdisk，第二个参数用"-"代替

(5)设置开发板启动后，自动执行的命令
 setenv bootcmd tftp 41000000 uImage\;tftp 42000000 exynos4412-fs4412.dtb\;tftp 43000000 ramdisk.img\;bootm 41000000 43000000 42000000

