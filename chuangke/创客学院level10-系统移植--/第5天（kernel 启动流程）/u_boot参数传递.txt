一 u_boot和Linux 内核之间的参数传递

r0 : 0
r1 : 开发板的ID
r2 : 其他参数在内存中开始地址

r1的参数，是让Linux内核自己去判断，它是否支持当前的开发板
r2是其他参数在内存中的开始地址

问:r2所保存的地址中，存放哪些信息?
答:
(1)内存的信息
   内存的开始地址和内存的大小
   
(2)命令行参数:bootargs的内容
	 高诉Linux内核启动后，挂载文件系统的方式(例如:NFS方式)
	 
(3)其他信息


问:u_boot引导Linux内核启动的时候，需要传递一些参数告诉Linux内核当前环境,
   但是在传递参数的时候，只是告诉了参数所在内存的开始地址，并没有告诉Linux
   内核，可以访问的内存的大小,Linux内核它是如何知道它访问的参数结束的地方在那里?
   
答:u_boot和Linux之间在传递参数的时候，是按照双方约定的格式传递的

问:目前Linux内核支持哪些格式的传递呢?
答:
<1>通过struct parm_struct结构体来传递 (Linux 2.6之前使用的方式,已经过时，不便于扩展)
<2>通过tag列表来传递 (Linux 2.6开始使用的方式)
   
   一个tag节点:
   tag头 + 大小 + 内容
   
   |      | 结束的tag
   |------|
   |      |
   |------|
   |      |
   |------|
   |      |开始的tag

<3>通过设备树来传递(Linux 3.0开始使用的方式)
	 u_boot 修改了设备树的节点，把需要传递的信息放在了设备树中。
	 
注意:
	在Linux 3.0之后的内核，这些方式都支持。	    
   
  
	     

